import { Network } from './Network';

export enum TxnAction {
  NFT_MINT = 'NFT_MINT',
  TOKEN_MINT = 'TOKEN_MINT',
  TOKEN_CREATE = 'TOKEN_CREATE',
  SOL_TRANSFER = 'SOL_TRANSFER',
  TOKEN_TRANSFER = 'TOKEN_TRANSFER',
  NFT_TRANSFER = 'NFT_TRANSFER',
  NFT_BURN = 'NFT_BURN',
  TOKEN_BURN = 'TOKEN_BURN',
  NFT_SALE = 'NFT_SALE',
  NFT_BID = 'NFT_BID',
  NFT_BID_CANCEL = 'NFT_BID_CANCEL',
  NFT_LIST = 'NFT_LIST',
  NFT_LIST_UPDATE = 'NFT_LIST_UPDATE',
  NFT_LIST_CANCEL = 'NFT_LIST_CANCEL',
  MARKETPLACE_WITHDRAW = 'MARKETPLACE_WITHDRAW',
  OFFER_LOAN = 'OFFER_LOAN',
  CANCEL_LOAN = 'CANCEL_LOAN',
  TAKE_LOAN = 'TAKE_LOAN',
  REPAY_LOAN = 'REPAY_LOAN',
  FORECLOSE_LOAN = 'FORECLOSE_LOAN',
  REPAY_ESCROW_LOAN = 'REPAY_ESCROW_LOAN',
  EXTEND_LOAN = 'EXTEND_LOAN',
  EXTEND_ESCROW_LOAN = 'EXTEND_ESCROW_LOAN',
  MEMO = 'MEMO',
  SWAP = 'SWAP',
  CREATE_POOL = 'CREATE_POOL',
  ADD_LIQUIDITY = 'ADD_LIQUIDITY',
  REMOVE_LIQUIDITY = 'REMOVE_LIQUIDITY',
  CREATE_RAFFLE = 'CREATE_RAFFLE',
  BUY_TICKETS = 'BUY_TICKETS',
  REVEAL_WINNERS = 'REVEAL_WINNERS',
  CLAIM_PRIZE = 'CLAIM_PRIZE',
  CLOSE_RAFFLE = 'CLOSE_RAFFLE',
  CANCEL_RAFFLE = 'CANCEL_RAFFLE',
  CREATE_TREE = 'CREATE_TREE',
  COMPRESSED_NFT_MINT = 'COMPRESSED_NFT_MINT',
  COMPRESSED_NFT_TRANSFER = 'COMPRESSED_NFT_TRANSFER',
  COMPRESSED_NFT_BURN = 'COMPRESSED_NFT_BURN',
  CREATE_REALM = 'CREATE_REALM',
  DEPOSIT_GOVERNING_TOKENS = 'DEPOSIT_GOVERNING_TOKENS',
  WITHDRAW_GOVERNING_TOKENS = 'WITHDRAW_GOVERNING_TOKENS',
  SET_GOVERNANCE_DELEGATE = 'SET_GOVERNANCE_DELEGATE',
  CREATE_GOVERNANCE = 'CREATE_GOVERNANCE',
  CREATE_PROGRAM_GOVERNANCE = 'CREATE_PROGRAM_GOVERNANCE',
  CREATE_PROPOSAL = 'CREATE_PROPOSAL',
  ADD_SIGNATORY = 'ADD_SIGNATORY',
  REMOVE_SIGNATORY = 'REMOVE_SIGNATORY',
  INSERT_TRANSACTION = 'INSERT_TRANSACTION',
  REMOVE_TRANSACTION = 'REMOVE_TRANSACTION',
  CANCEL_PROPOSAL = 'CANCEL_PROPOSAL',
  SIGN_OFF_PROPOSAL = 'SIGN_OFF_PROPOSAL',
  CAST_VOTE = 'CAST_VOTE',
  FINALIZE_VOTE = 'FINALIZE_VOTE',
  RELINQUISH_VOTE = 'RELINQUISH_VOTE',
  EXECUTE_TRANSACTION = 'EXECUTE_TRANSACTION',
  CREATE_MINT_GOVERNANCE = 'CREATE_MINT_GOVERNANCE',
  CREATE_TOKEN_GOVERNANCE = 'CREATE_TOKEN_GOVERNANCE',
  SET_GOVERNANCE_CONFIG = 'SET_GOVERNANCE_CONFIG',
  SET_REALM_AUTHORITY = 'SET_REALM_AUTHORITY',
  SET_REALM_CONFIG = 'SET_REALM_CONFIG',
  CREATE_TOKEN_OWNER_RECORD = 'CREATE_TOKEN_OWNER_RECORD',
  POST_MESSAGE = 'POST_MESSAGE',
  UNKNOWN = 'UNKNOWN',
}

export type CallBack = {
  id: string;
  network: Network;
  addresses: string[];
  callback_url: string;
  events: TxnAction & 'ANY'[];
  enable_raw?: boolean;
  enable_events?: boolean;
  type?: CallbackType;
  encoding?: CallbackEncoding;
  created_at: Date;
  updated_at: Date;
};

export type CallbackType = 'DISCORD' | 'CALLBACK' | 'ACCOUNT';
export type CallbackEncoding = 'RAW' | 'PARSED';
